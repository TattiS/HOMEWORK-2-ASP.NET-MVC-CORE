@model Task2WebApi.Models.DTO.Query5DTO
@{
    ViewData["Title"] = "GetResult";
}

<h2>Query 5</h2>
<hr />
<div class="row">
    <div class="col-md-12">
        <article>
            <p>Получить следующую структуру User (передать Id пользователя в параметры)</p>
            <ul>
                <li>Последний пост пользователя(по дате)</li>
                <li>Количество комментов под последним постом</li>
                <li>Количество невыполненных тасков для пользователя</li>
                <li>Самый популярный пост пользователя(там где больше всего комментов с длиной текста больше 80 символов)</li>
                <li>Самый популярный пост пользователя(там где больше всего лайков)</li>
            </ul>
        </article>
    </div>
</div>
<div class="row">
    <div class="col-md-2">
        <form asp-action="GetResult">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="@Model.UserId" class="control-label"></label>
                <input asp-for="@Model.UserId" class="form-control" />
                <span asp-validation-for="@Model.UserId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Get the result" class="btn btn-default" />
            </div>
        </form>
    </div>

    @if (Model != null && ViewBag.NotFound == null)
    {
        <div class="col-md-10">
            <table class="table">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.UserId)</th>
                        <th>@Html.DisplayNameFor(model => model.Result.LastPost)</th>
                        <th>@Html.DisplayNameFor(model => model.Result.LastPostCommentsCount)</th>
                        <th>@Html.DisplayNameFor(model => model.Result.UnCompletedTasksCount)</th>
                        <th>@Html.DisplayNameFor(model => model.Result.MostPopularByComms)</th>
                        <th>@Html.DisplayNameFor(model => model.Result.MostPopularByLikes)</th>
                    </tr>
                </thead>
                <tbody>

                    <tr>
                        <td>@Html.ActionLink(Model.UserId.ToString(), "ShowUser", "Show", new { id = Model?.UserId }, new { @style = "text-decoration: none;" })</td>
                        @if (Model.Result.LastPost != null)
                        {
                            <td class="alert-info">
                                <dl class="dl-horizontal">
                                    <dt>@Html.DisplayNameFor(model => model.Result.LastPost.Id)</dt>
                                    <dd>@Model.Result.LastPost?.Id</dd>
                                    <dt>@Html.DisplayNameFor(model => model.Result.LastPost.CreatedAt)</dt>
                                    <dd>@Model.Result.LastPost?.CreatedAt</dd>
                                </dl>
                                <dl>
                                    <dt>@Html.DisplayNameFor(model => model.Result.LastPost.Title)</dt>
                                    <dd>@Model.Result.LastPost?.Title</dd>
                                    <dt>@Html.DisplayNameFor(model => model.Result.LastPost.Likes)</dt>
                                    <dd>@Model.Result.LastPost?.Likes</dd>
                                    @Html.ActionLink("Show more", "ShowPost", "Show", new { @Model.Result.LastPost?.Id }, new { @class = "btn btn-info btn-xs" })
                                </dl>
                            </td>
                        }
                        else
                        {
                            <td> None</td>
                        }
                        <td>@Html.DisplayFor(model => model.Result.LastPostCommentsCount)</td>
                        <td>@Html.DisplayFor(model => model.Result.UnCompletedTasksCount)</td>
                        @if (Model.Result.MostPopularByComms != null)
                        {
                            <td class="alert-info">
                                <dl class="dl-horizontal">
                                    <dt>@Html.DisplayNameFor(model => model.Result.MostPopularByComms.Id)</dt>
                                    <dd>@Model.Result.MostPopularByComms?.Id</dd>
                                    <dt>@Html.DisplayNameFor(model => model.Result.MostPopularByComms.CreatedAt)</dt>
                                    <dd>@Model.Result.MostPopularByComms?.CreatedAt</dd>
                                </dl>
                                <dl>
                                    <dt>@Html.DisplayNameFor(model => model.Result.MostPopularByComms.Title)</dt>
                                    <dd>@Model.Result.MostPopularByComms?.Title</dd>
                                    <dt>@Html.DisplayNameFor(model => model.Result.MostPopularByComms.Likes)</dt>
                                    <dd>@Model.Result.MostPopularByComms?.Likes</dd>
                                    @Html.ActionLink("Show more", "ShowPost", "Show", new { @Model.Result.MostPopularByComms?.Id }, new { @class = "btn btn-info btn-xs" })
                                </dl>

                            </td>
                        }
                        else
                        {
                            <td>None</td>

                        }
                        @if (Model.Result.MostPopularByLikes != null)
                        {
                            <td class="alert-info">
                                <dl class="dl-horizontal">
                                    <dt>@Html.DisplayNameFor(model => model.Result.MostPopularByLikes.Id)</dt>
                                    <dd>@Model.Result.MostPopularByLikes?.Id</dd>
                                    <dt>@Html.DisplayNameFor(model => model.Result.MostPopularByLikes.CreatedAt)</dt>
                                    <dd>@Model.Result.MostPopularByLikes?.CreatedAt</dd>
                                </dl>
                                <dl>
                                    <dt>@Html.DisplayNameFor(model => model.Result.MostPopularByLikes.Title)</dt>
                                    <dd>@Model.Result.MostPopularByLikes?.Title</dd>
                                    <dt>@Html.DisplayNameFor(model => model.Result.MostPopularByLikes.Likes)</dt>
                                    <dd>@Model.Result.MostPopularByLikes?.Likes</dd>
                                    @Html.ActionLink("Show more", "ShowPost", "Show", new { @Model.Result.MostPopularByLikes?.Id }, new { @class = "btn btn-info btn-xs" })
                                </dl>
                            </td>
                        }
                        else
                        {
                            <td> None</td>}
                    </tr>

                </tbody>
            </table>

        </div>
    }
    @if (ViewBag.NotFound != null && ViewBag.NotFound)
    {
        <div class="col-md-9">
            <table class="table">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.UserId)</th>
                    <th>@Html.DisplayNameFor(model => model.Result.LastPost)</th>
                    <th>@Html.DisplayNameFor(model => model.Result.LastPostCommentsCount)</th>
                    <th>@Html.DisplayNameFor(model => model.Result.UnCompletedTasksCount)</th>
                    <th>@Html.DisplayNameFor(model => model.Result.MostPopularByComms)</th>
                    <th>@Html.DisplayNameFor(model => model.Result.MostPopularByLikes)</th>
                </tr>

                <tr>
                    <td>@Html.ActionLink(Model.UserId.ToString(), "ShowUser", "Show", new { id = Model.UserId }, new { @style = "text-decoration: none;" })</td>
                    <td colspan="4">There's no such user.</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>

            </table>

        </div>

    }
</div>
<div>
    <a asp-action="Index" asp-controller="Home">Back Home</a>
</div>